name: Build and deploy Node.js app to Azure Web App - airtrexrequests

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: ğŸ§¾ Checkout repo
        uses: actions/checkout@v4

      - name: ğŸ”§ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: ğŸ’¾ Cache Node.js dependencies and Next.js build
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            .next/cache
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: ğŸ“¦ Install & build
        run: |
          npm ci
          npm run build
          npm prune --omit=dev
        env:
          DB_USER:     ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_SERVER:   ${{ secrets.DB_SERVER }}
          DB_NAME:     ${{ secrets.DB_NAME }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}

      - name: ğŸ“‚ Package for Azure deploy
        run: |
          # Prepare directories
          mkdir -p deploy/.next/{static,server}

          # Copy compiled Next.js output
          cp -r .next/static         deploy/.next/static
          cp -r .next/server         deploy/.next/server
          cp      .next/BUILD_ID     deploy/.next/BUILD_ID
          cp      .next/required-server-files.json deploy/.next/required-server-files.json

          # Copy your TS config so Next can load it
          cp next.config.ts deploy/

          # Copy package files
          cp package.json package-lock.json deploy/

          # Static assets
          cp -r public deploy/public

          # Runtime dependencies
          cp -a node_modules deploy/node_modules

          # Startup script
          cat > deploy/startup.sh << 'EOF'
          #!/bin/sh
          cd /home/site/wwwroot
          export PORT=8080
          exec node node_modules/next/dist/bin/next start
          EOF
          chmod +x deploy/startup.sh

          # Zip it all up
          cd deploy
          zip -r ../release.zip .
          cd ..

      - name: ğŸ“¤ Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production

    steps:
      - name: ğŸ“¥ Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: ğŸ“¦ Unzip release
        run: unzip release.zip

      - name: ğŸš€ Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: airtrexrequests
          package: ./release.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_8F1A663139A6471BBB0B85FEBF386A29 }}
